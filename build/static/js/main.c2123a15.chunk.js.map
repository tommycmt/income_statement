{"version":3,"sources":["Helper.js","IncomeTableHeader.js","IncomeSection.js","ExpenditureSection.js","DayTotal.js","mLabAPI.js","IncomeTable.js","Income.js","serviceWorker.js","index.js"],"names":["computeMonthDays","month","parseInt","year","Date","getFullYear","pad","num","size","s","length","CryptoJS","require","getSum","total","IncomeTableHeader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","row","push","react_default","a","createElement","i","createHeader","Component","IncomeSection","rows","keys","incomeData","index","key","reduce","className","allTotal","colSpan","createRows","createSubTotal","ExpenditureSection","expenditureData","DayTotal","incomeTotal","expenditureTotal","createTotal","getIncomeData","token","callback","startTime","toISOString","endTime","xhr","XMLHttpRequest","onreadystatechange","readyState","status","formmatedData","JSON","parse","responseText","open","setRequestHeader","send","getExpenditureData","uploadToDB","date","type","money","section","_data","data","defineProperty","stringify","resultObj","d","getMonth","day","getDate","undefined","monthDays","Array","fill","Math","round","IncomeTable","apiToken","income","expenditure","newMonth","prompt","trim","setState","passphrase","originalText","AES","decrypt","toString","enc","Utf8","err","alert","decryptToken","res","bind","today","dateList","split","UTC","getData","onClick","changeMonth","uploadIncomeData","uploadExpenditureData","src_IncomeTableHeader","src_IncomeSection","src_ExpenditureSection","src_DayTotal","Income","src_IncomeTable_0","Boolean","window","location","hostname","match","ReactDOM","render","src_Income_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2123a15.chunk.js","sourcesContent":["export function computeMonthDays(month) {\r\n  var month = parseInt(month);\r\n  switch(month) {\r\n    case 2:\r\n      var year = new Date().getFullYear();\r\n      return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0))?29:28;\r\n    case 1: case 3: case 5: case 7: case 8: case 10: case 12:\r\n      return 31;\r\n    default:\r\n      return 30;\r\n  }\r\n}\r\n\r\nexport function getMonthName(month) {\r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  return monthNames[month-1];\r\n}\r\n\r\nexport function pad(num, size) {\r\n    var s = num+\"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n}\r\n\r\nvar CryptoJS = require(\"crypto-js\"); \r\n\r\n\r\nexport function decryptToken() {\r\n  var ciphertext = \"U2FsdGVkX1/Iwss9Q1fUC8y9qgLSYRvFREi0Fx7SSCErxUBXh/9lo5+z7gyItljTI37XbYadyZ//B3KI6wJAig==\";\r\n  var passphrase = prompt(\"Passphrase:\");\r\n  try {\r\n    var bytes  = CryptoJS.AES.decrypt(ciphertext, passphrase);\r\n    var originalText = bytes.toString(CryptoJS.enc.Utf8);\r\n  } catch (err) {\r\n    var originalText = \"\";\r\n  }\r\n  if (originalText === \"\") {\r\n    alert(\"Incorrect Passphrase\");\r\n  }\r\n  return originalText;\r\n}\r\n\r\nexport function getSum(total, num) {\r\n  return total + num;\r\n}\r\n","import React, { Component } from 'react';\r\nimport { computeMonthDays, pad } from './Helper.js'\r\n\r\nclass IncomeTableHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  \r\n  createHeader() {\r\n    var row = [];\r\n    row.push(<td>{}</td>);\r\n    for (var i = 1; i <= computeMonthDays(this.props.month); i++) {\r\n      row.push(<td>{pad(i, 2)}</td>);\r\n    }\r\n    row.push(<td>{\"Type Total\"}</td>);\r\n    return <thead><tr>{row}</tr></thead>;\r\n  }\r\n  \r\n  render() {\r\n    return this.createHeader();\r\n  }\r\n}\r\n\r\nexport default IncomeTableHeader;\r\n","import React, { Component } from 'react';\r\nimport { computeMonthDays, getSum } from './Helper.js'\r\n\r\n\r\nclass IncomeSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  \r\n  createRows() {\r\n    var rows = [];\r\n    var keys = Object.keys(this.props.incomeData[this.props.month]);\r\n    for (var index in keys){\r\n      var key = keys[index];\r\n      var row = [];\r\n      row.push(<td>{key}</td>);\r\n      for (var i = 1; i <= computeMonthDays(this.props.month); i++) {\r\n        row.push(<td>${this.props.incomeData[this.props.month][key][i-1] || 0}</td>);\r\n      }\r\n      row.push(<td>${this.props.incomeData[this.props.month][key].reduce(getSum)}</td>);\r\n      rows.push(<tr>{row}</tr>);\r\n    };\r\n\r\n    return rows;\r\n  }\r\n  \r\n  createSubTotal() {\r\n    var row = [];\r\n    row.push(<td className=\"section\">{\"Sub Total\"}</td>);\r\n    var allTotal = 0;\r\n    for (var i = 1; i <= computeMonthDays(this.props.month); i++) {\r\n      var total = 0;\r\n      var keys = Object.keys(this.props.incomeData[this.props.month]);\r\n      for (var index in keys){\r\n        var key = keys[index];\r\n        total += this.props.incomeData[this.props.month][key][i-1];\r\n      };\r\n      allTotal += total;\r\n      row.push(<td>${total}</td>);\r\n    }\r\n    row.push(<td>${allTotal}</td>);\r\n    return <tr>{row}</tr>;\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <td className=\"section\">Income</td>\r\n          <td colSpan=\"100%\"></td>\r\n        </tr>\r\n        {this.createRows()}\r\n        {this.createSubTotal()}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IncomeSection;\r\n","import React, { Component } from 'react';\r\nimport { computeMonthDays, getSum } from './Helper.js'\r\n\r\n\r\nclass ExpenditureSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  \r\n  createRows() {\r\n    var rows = [];\r\n    var keys = Object.keys(this.props.expenditureData[this.props.month]);\r\n    for (var index in keys){\r\n      var key = keys[index];\r\n      var row = [];\r\n      row.push(<td>{key}</td>);\r\n      for (var i = 1; i <= computeMonthDays(this.props.month); i++) {\r\n        row.push(<td>${this.props.expenditureData[this.props.month][key][i-1] || 0}</td>);\r\n      }\r\n      row.push(<td>${this.props.expenditureData[this.props.month][key].reduce(getSum) || 0}</td>);\r\n      rows.push(<tr>{row}</tr>);\r\n    };\r\n\r\n    return rows;\r\n  }\r\n  \r\n  createSubTotal() {\r\n    var row = [];\r\n    row.push(<td className=\"section\">{\"Sub Total\"}</td>);\r\n    var allTotal = 0;\r\n    for (var i = 1; i <= computeMonthDays(this.props.month); i++) {\r\n      var total = 0;\r\n      var keys = Object.keys(this.props.expenditureData[this.props.month]);\r\n      for (var index in keys){\r\n        var key = keys[index];\r\n        total += this.props.expenditureData[this.props.month][key][i-1];\r\n      };\r\n      allTotal += total;\r\n      row.push(<td>${total}</td>);\r\n    }\r\n    row.push(<td>${allTotal}</td>);\r\n    return <tr>{row}</tr>;\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <td className=\"section\">Expenditure</td>\r\n          <td colSpan=\"100%\"></td>\r\n        </tr>\r\n        {this.createRows()}\r\n        {this.createSubTotal()}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ExpenditureSection;\r\n","import React, { Component } from 'react';\r\nimport { computeMonthDays, getSum } from './Helper.js'\r\n\r\n\r\nclass DayTotal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  \r\n  createTotal() {\r\n    var row = [];\r\n    row.push(<td className=\"section\">{\"Day Total\"}</td>);\r\n    var allTotal = 0;\r\n    for (var i = 1; i <= computeMonthDays(this.props.month); i++) {\r\n      var incomeTotal = 0;\r\n      var expenditureTotal = 0;\r\n      var keys = Object.keys(this.props.incomeData[this.props.month]);\r\n      for (var index in keys){\r\n        var key = keys[index];\r\n        incomeTotal += this.props.incomeData[this.props.month][key][i-1];\r\n      };\r\n      \r\n      var keys = Object.keys(this.props.expenditureData[this.props.month]);\r\n      for (var index in keys){\r\n        var key = keys[index];\r\n        expenditureTotal += this.props.expenditureData[this.props.month][key][i-1];\r\n      };\r\n      var total = incomeTotal - expenditureTotal;\r\n      allTotal += total;\r\n      row.push(<td>${total}</td>);\r\n    }\r\n    row.push(<td>${allTotal}</td>);\r\n    return <tbody><tr>{row}</tr></tbody>;\r\n  }\r\n  \r\n  render() {\r\n    return this.createTotal();\r\n  }\r\n}\r\n\r\nexport default DayTotal;\r\n","import { computeMonthDays } from './Helper.js'\r\n\r\nexport function getIncomeData(token, callback) {\r\n  var year = new Date().getFullYear();\r\n  var startTime = new Date(year, 0).toISOString();\r\n  var endTime = new Date(year + 1, 0).toISOString();\r\n  \r\n  var xhr = new XMLHttpRequest();\r\n  xhr.onreadystatechange = function() {\r\n      if (this.readyState === 4 && this.status === 200) {\r\n        callback(formmatedData(JSON.parse(this.responseText), \"income\"));\r\n      }\r\n  };\r\n  xhr.open(\"GET\", 'https://api.mlab.com/api/1/databases/income/collections/income?q={\"income\": {\"$exists\":true}, \"date\": {\"$gte\": \"' + startTime +'\", \"$lt\": \"' + endTime + '\"}}&apiKey=' + token, true);\r\n  xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n  xhr.send();\r\n}\r\n\r\nexport function getExpenditureData(token, callback) {\r\n  var year = new Date().getFullYear();\r\n  var startTime = new Date(year, 0).toISOString();\r\n  var endTime = new Date(year + 1, 0).toISOString();\r\n  \r\n  var xhr = new XMLHttpRequest();\r\n  xhr.onreadystatechange = function() {\r\n      if (this.readyState === 4 && this.status === 200) {\r\n        callback(formmatedData(JSON.parse(this.responseText), \"expenditure\"));\r\n      }\r\n  };\r\n  xhr.open(\"GET\", 'https://api.mlab.com/api/1/databases/income/collections/income?q={\"expenditure\": {\"$exists\":true}, \"date\": {\"$gte\": \"' + startTime +'\", \"$lt\": \"' + endTime + '\"}}&apiKey=' + token, true);\r\n  xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n  xhr.send();\r\n}\r\n\r\nexport function uploadToDB(token, date, type, money, section, callback) {\r\n  var data = { \"date\": date,\r\n               [section]: type,\r\n               \"money\": money\r\n  };\r\n\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.onreadystatechange = function() {\r\n      if (this.readyState === 4 && this.status === 200) {\r\n        callback();\r\n      }\r\n  };\r\n  xhr.open(\"POST\", 'https://api.mlab.com/api/1/databases/income/collections/income?apiKey=' + token, true);\r\n  xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n  xhr.send(JSON.stringify(data));\r\n}\r\n\r\n\r\nexport function formmatedData(data, section) {\r\n  var resultObj = {};\r\n  for (var index=1;index<=12;index++) {\r\n    resultObj[index] = {};\r\n  }\r\n  for (var index in data) {\r\n    var d = data[index];\r\n    var date = new Date(d.date);\r\n    var month = date.getMonth() + 1;\r\n    var day = date.getDate();\r\n    var type = d[section];\r\n    \r\n    if (resultObj[month][type] === undefined) {\r\n      var monthDays = computeMonthDays(month);\r\n      resultObj[month][type] = Array(monthDays);\r\n      resultObj[month][type].fill(0);\r\n    }\r\n    resultObj[month][type][day-1] += Math.round(d.money);\r\n  }\r\n  return resultObj;\r\n}","import React, { Component } from 'react';\r\nimport './IncomeTable.css';\r\n\r\nimport IncomeTableHeader from './IncomeTableHeader.js'\r\nimport IncomeSection from './IncomeSection.js'\r\nimport ExpenditureSection from './ExpenditureSection.js'\r\nimport DayTotal from './DayTotal.js'\r\nimport { computeMonthDays, pad, getMonthName, decryptToken} from './Helper.js'\r\nimport { getIncomeData, getExpenditureData, formmatedData, uploadToDB} from './mLabAPI.js'\r\n\r\n\r\nclass IncomeTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var today = new Date();\r\n    var month = today.getMonth() + 1;\r\n    var monthDays = computeMonthDays(month);\r\n    this.state = { \"month\": month,\r\n                   \"monthDays\": monthDays,\r\n                   \"apiToken\": \"\",\r\n                   \"income\": formmatedData({}),\r\n                   \"expenditure\": formmatedData({}),\r\n    };\r\n  }\r\n  \r\n  changeMonth() {\r\n    var newMonth = prompt(\"Month (1-12):\");\r\n    if (newMonth === null || newMonth === \"\" || newMonth === undefined) {\r\n      return;\r\n    }\r\n    newMonth = newMonth.trim()\r\n    this.setState({ \"month\": newMonth},\r\n      function() {this.setState({ monthDays: computeMonthDays(this.state.month)})}\r\n    );\r\n  }\r\n  \r\n  getData() {\r\n    if (this.state.apiToken === \"\") {\r\n      var token = decryptToken();\r\n      if (token !== \"\") {\r\n        this.setState({\"apiToken\" : token}, function() {\r\n          getIncomeData(this.state.apiToken, (function(res) {this.setState({\"income\": res})}).bind(this));\r\n          getExpenditureData(this.state.apiToken, (function(res) {this.setState({\"expenditure\": res})}).bind(this));\r\n        });\r\n      }\r\n    } else {\r\n      getIncomeData(this.state.apiToken, (function(res) {this.setState({\"income\": res})}).bind(this));\r\n      getExpenditureData(this.state.apiToken, (function(res) {this.setState({\"expenditure\": res})}).bind(this));\r\n    }\r\n  }\r\n  \r\n  uploadIncomeData() {\r\n    var today = new Date();\r\n    var year = today.getFullYear();\r\n    var month = today.getMonth() + 1;\r\n    var day = today.getDate();\r\n    var date = prompt(\"Date (DD-MM-YYYY):\", pad(day, 2)+ \"-\" + pad(month, 2) + \"-\" + year);\r\n    if (date === null || date === \"\" || date === undefined) {\r\n      return;\r\n    }\r\n    date = date.trim();\r\n    var dateList = date.split(\"-\");\r\n    var d = new Date(Date.UTC(dateList[2], dateList[1] - 1, dateList[0]));\r\n    var type = prompt(\"Type: \");\r\n    if (type === null || type === \"\" || type === undefined) {\r\n      return;\r\n    }\r\n    type = type.trim();\r\n    var money = prompt(\"Income: \");\r\n    if (money === null || money === \"\" || money === undefined) {\r\n      return;\r\n    }\r\n    money = money.trim();\r\n    uploadToDB(this.state.apiToken, d, type, money, \"income\", this.getData.bind(this));\r\n  }\r\n  \r\n  uploadExpenditureData() {\r\n    var today = new Date();\r\n    var year = today.getFullYear();\r\n    var month = today.getMonth() + 1;\r\n    var day = today.getDate();\r\n    var date = prompt(\"Date (DD-MM-YYYY):\", pad(day, 2)+ \"-\" + pad(month, 2) + \"-\" + year);\r\n    if (date === null || date === \"\" || date === undefined) {\r\n      return;\r\n    }\r\n    date = date.trim();\r\n    var dateList = date.split(\"-\");\r\n    var d = new Date(Date.UTC(dateList[2], dateList[1] - 1, dateList[0]));\r\n    var type = prompt(\"Type: \");\r\n    if (type === null || type === \"\" || type === undefined) {\r\n      return;\r\n    }\r\n    type = type.trim();\r\n    var money = prompt(\"Expenditure: \");\r\n    if (money === null || money === \"\" || money === undefined) {\r\n      return;\r\n    }\r\n    money = money.trim();\r\n    uploadToDB(this.state.apiToken, d, type, money, \"expenditure\", this.getData.bind(this));\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"btn\" onClick={this.changeMonth.bind(this)}>Change Month</button>\r\n        <button className=\"btn\" onClick={this.getData.bind(this)}>Get Data</button>\r\n        <button className=\"income_data\" onClick={this.uploadIncomeData.bind(this)}>Income</button>\r\n        <button className=\"expenditure_data\" onClick={this.uploadExpenditureData.bind(this)}>Expenditure</button>\r\n        <h2>{getMonthName(this.state.month)}</h2>\r\n        <div className=\"income_div\">\r\n          <table className=\"income_table\">\r\n            <IncomeTableHeader month={this.state.month}/>\r\n            <IncomeSection month={this.state.month} incomeData={this.state.income} />\r\n\r\n            <ExpenditureSection month={this.state.month} expenditureData={this.state.expenditure} />\r\n            <DayTotal month={this.state.month} incomeData={this.state.income} expenditureData={this.state.expenditure} />\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IncomeTable;\r\n","import React, { Component } from 'react';\r\nimport './Income.css';\r\nimport IncomeTable from './IncomeTable.js'\r\n\r\nclass Income extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"income\">\r\n        <h1>Income Statement</h1>\r\n        <IncomeTable />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Income;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Income from './Income';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Income />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}